@import "../breakpointtest.scss";

// Define outline styles
$outline-styles: (
  none: none,
  solid: solid,
  dashed: dashed,
  dotted: dotted,
  double: double
);

// Define outline properties
$outline-properties: (
  none: (
    outline: 2px solid transparent,
    outline-offset: 2px
  ),
  solid: (outline-style: solid),
  dashed: (outline-style: dashed),
  dotted: (outline-style: dotted),
  double: (outline-style: double)
);

// Generate base outline classes
@each $style, $properties in $outline-properties {
  .outline-#{$style} {
    @each $property, $value in $properties {
      #{property}: #{value};
    }
  }
}

// Generate state-based outline classes
@each $style, $properties in $outline-properties {
  .hover\:outline-#{$style}:hover {
    @each $property, $value in $properties {
      #{property}: #{value};
    }
  }
  .focus\:outline-#{$style}:focus {
    @each $property, $value in $properties {
      #{property}: #{value};
    }
  }
  .active\:outline-#{$style}:active {
    @each $property, $value in $properties {
      #{property}: #{value};
    }
  }
}

// Generate responsive outline classes
@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    @each $style, $properties in $outline-properties {
      .#{$breakpoint}\:outline-#{$style} {
        @each $property, $value in $properties {
          #{property}: #{value};
        }
      }

      // Responsive state-based classes
      .#{$breakpoint}\:hover\:outline-#{$style}:hover {
        @each $property, $value in $properties {
          #{property}: #{value};
        }
      }
      .#{$breakpoint}\:focus\:outline-#{$style}:focus {
        @each $property, $value in $properties {
          #{property}: #{value};
        }
      }
      .#{$breakpoint}\:active\:outline-#{$style}:active {
        @each $property, $value in $properties {
          #{property}: #{value};
        }
      }
    }
  }
}
