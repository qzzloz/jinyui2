@import "../colors";

// Generate ring offset color classes using the colors map
@each $key, $value in $colors-map {
  .ring-offset-#{$key} {
    --tw-ring-offset-color: $value;
    box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
  }

  // State-based ring offset color classes
  .hover\:ring-offset-#{$key}:hover {
    --tw-ring-offset-color: $value;
    box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
  }
  .focus\:ring-offset-#{$key}:focus {
    --tw-ring-offset-color: $value;
    box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
  }
  .active\:ring-offset-#{$key}:active {
    --tw-ring-offset-color: $value;
    box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
  }
}

// Generate responsive ring offset color classes
@each $breakpoint in map-keys($breakpoints) {
  @include breakpoint($breakpoint) {
    @each $key, $value in $colors-map {
      .#{$breakpoint}\:ring-offset-#{$key} {
        --tw-ring-offset-color: $value;
        box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
      }

      // Responsive state-based classes
      .#{$breakpoint}\:hover\:ring-offset-#{$key}:hover {
        --tw-ring-offset-color: $value;
        box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
      }
      .#{$breakpoint}\:focus\:ring-offset-#{$key}:focus {
        --tw-ring-offset-color: $value;
        box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
      }
      .#{$breakpoint}\:active\:ring-offset-#{$key}:active {
        --tw-ring-offset-color: $value;
        box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);
      }
    }
  }
}
